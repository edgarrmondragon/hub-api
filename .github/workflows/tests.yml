name: Tests

on:
  pull_request:
    paths:
    - .github/workflows/tests.yml
    - src/**
    - tests/**
    - Dockerfile
    - docker-compose.yml
    - pyproject.toml
    - uv.lock
  push:
    branches: [main]
    paths:
    - .github/workflows/tests.yml
    - src/**
    - tests/**
    - Dockerfile
    - docker-compose.yml
    - pyproject.toml
    - uv.lock
  workflow_dispatch:
    inputs: {}
  schedule:
    # Weekly on Monday at 12:00 PM UTC
  - cron: "0 12 * * 1"

env:
  FORCE_COLOR: "1"
  # renovate: datasource=pypi depName=schemathesis
  SCHEMATHESIS_VERSION: "3.39.7"
  # renovate: datasource=pypi depName=uv
  UV_VERSION: "0.5.22"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-hub-data:
    name: Get Hub Data
    runs-on: ubuntu-24.04
    continue-on-error: false
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
    - uses: astral-sh/setup-uv@b5f58b2abc5763ade55e4e9d0fe52cd1ff7979ca # v5.2.1
      with:
        version: ${{ env.UV_VERSION }}
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: meltano/hub
        ref: main
        path: meltano-hub
    - run: uv run python -I build.py meltano-hub/_data
      env:
        ONLY_GROUP: build
    - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      with:
        name: hub-data
        path: plugins.db

  tests:
    name: Test
    runs-on: ubuntu-24.04
    continue-on-error: false
    needs: [get-hub-data]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
    - uses: astral-sh/setup-uv@b5f58b2abc5763ade55e4e9d0fe52cd1ff7979ca # v5.2.1
      with:
        version: ${{ env.UV_VERSION }}
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: hub-data
    - run: uv run coverage run -m pytest -v
      continue-on-error: true # Continue on error to combine coverage.
      env:
        ONLY_GROUP: tests
    - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      with:
        include-hidden-files: true
        name: coverage
        path: .coverage.*

  typing:
    name: Type Checking
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
    - uses: astral-sh/setup-uv@b5f58b2abc5763ade55e4e9d0fe52cd1ff7979ca # v5.2.1
      with:
        version: ${{ env.UV_VERSION }}
    - run: uv run mypy src tests
      env:
        ONLY_GROUP: typing

  schemathesis:
    name: Schemathesis Test
    runs-on: ubuntu-24.04
    needs: [get-hub-data]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: hub-data
    - name: Start containers
      run: docker compose up -d --build
    - uses: schemathesis/action@e8c36caf1285d9c955e282cf71793837f92308a4 # v1.0.4
      with:
        schema: 'http://127.0.0.1:8000/openapi.json'
        base-url: http://127.0.0.1:8000
        token: ${{ secrets.SCHEMATHESIS_TOKEN }}
        api-name: meltano-hub-api
        report: 'true'
        args: '--experimental=openapi-3.1'
        version: ${{ env.SCHEMATHESIS_VERSION }}
    - name: Stop containers
      if: always()
      run: docker compose down

  coverage:
    name: Coverage
    runs-on: ubuntu-24.04
    continue-on-error: false
    needs: [tests]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: coverage
    - uses: astral-sh/setup-uv@b5f58b2abc5763ade55e4e9d0fe52cd1ff7979ca # v5.2.1
      with:
        version: ${{ env.UV_VERSION }}
    - name: Combine coverage
      env:
        ONLY_GROUP: tests
      run: |
        uv run coverage combine
        uv run coverage html --skip-covered --skip-empty

        # Report and write to summary.
        uv run coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

        # Report again and fail if under 100%.
        uv run coverage report --fail-under=100 --show-missing
    - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      if: failure()
      with:
        name: html-report
        path: htmlcov
