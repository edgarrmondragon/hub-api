name: Tests

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      git-ref:
        description: Meltano Hub commit SHA, branch, or tag
        required: false
        default: main
  schedule:
    # Weekly on Monday at 12:00 PM UTC
  - cron: "0 12 * * 1"

env:
  FORCE_COLOR: "1"
  UV_CONSTRAINT: ${{ github.workspace }}/.github/workflows/resources/constraints.txt

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-hub-data:
    name: Get Hub Data
    runs-on: ubuntu-24.04
    continue-on-error: false
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
    - uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
    - run: >
        uvx --with tox-uv
        tox -qq -e build -- --git-ref ${{ github.event.inputs.git-ref || 'main' }} --exit-zero >> _errors.md
      id: build
    - uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
      if: ${{ github.event_name == 'pull_request' }}
      id: find-comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Build Errors
    - uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
      if: ${{ github.event_name == 'pull_request' }}
      with:
        body-path: _errors.md
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        edit-mode: replace
        issue-number: ${{ github.event.pull_request.number }}
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: hub-data
        path: plugins.db

  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-24.04
    continue-on-error: false
    needs: [get-hub-data]
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - "3.13"
        - "3.14"
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
    - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: hub-data
    - run: uvx --with tox-uv tox -e ${{ matrix.python-version }}
      continue-on-error: true # Continue on error to combine coverage.
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        include-hidden-files: true
        name: coverage-py${{ matrix.python-version }}
        path: .coverage.*

  typing:
    name: Type Checking
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
    - uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
    - run: uvx --with tox-uv tox -e typing

  schemathesis:
    name: Schemathesis Test
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Start containers
      run: docker compose up -d --build
    - uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
    - run: >
        uvx --from schemathesis
        st run
        --header 'User-Agent: schemathesis'
        http://127.0.0.1:8080/openapi.json
    - uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5.6.2
      if: success() || failure() # always run even if the previous step fails
      with:
        comment: true
        detailed_summary: true
        include_passed: true
        report_paths: junit.xml
    - name: Stop containers
      if: always()
      run: docker compose down

  owasp:
    name: OWASP OFFAT
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Start containers
      run: docker compose up -d --build
    - uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
    - run: >
        uvx --with offat
        offat
        --server http://127.0.0.1:8080
        --file http://127.0.0.1:8080/openapi.json
        --rate-limit 120
        --capture-failed
        --headers 'User-Agent: offat'
        --format json
        --output ./offat-tmp/results.json
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: offat-results.json
        path: ./offat-tmp/results.json
        # retention period docs: https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#artifact-and-log-retention-policy
        retention-days: 2

    - name: Stop containers
      if: always()
      run: docker compose down

  coverage:
    name: Coverage
    runs-on: ubuntu-24.04
    continue-on-error: false
    needs: [tests]
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        merge-multiple: true
        pattern: coverage-*
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
    - uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
    - run: uv tool install --with tox-uv tox
    - name: Combine coverage
      run: |
        tox -e coverage -- combine
        tox -e coverage -- html --skip-covered --skip-empty

        # Report and write to summary.
        tox -qq -e coverage -- report --format=markdown >> $GITHUB_STEP_SUMMARY

        # Report again and fail if under 100%.
        tox -e coverage
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: failure()
      with:
        name: html-report
        path: htmlcov
