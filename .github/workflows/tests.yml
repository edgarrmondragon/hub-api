name: Tests

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      git-ref:
        description: Meltano Hub commit SHA, branch, or tag
        required: false
        default: main
  schedule:
    # Weekly on Monday at 12:00 PM UTC
  - cron: "0 12 * * 1"

env:
  FORCE_COLOR: "1"
  # renovate: datasource=pypi depName=offat
  OFFAT_VERSION: "0.19.4"
  # renovate: datasource=pypi depName=schemathesis
  SCHEMATHESIS_VERSION: "3.39.16"
  # renovate: datasource=pypi depName=uv
  UV_VERSION: "0.7.13"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-hub-data:
    name: Get Hub Data
    runs-on: ubuntu-24.04
    continue-on-error: false
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
    - uses: astral-sh/setup-uv@a02a550bdd3185dba2ebb6aa98d77047ce54ad21 # v6.2.1
      with:
        version: ${{ env.UV_VERSION }}
    - run: uv run python -I build.py --git-ref ${{ github.event.inputs.git-ref || 'main' }}
      env:
        ONLY_GROUP: build
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: hub-data
        path: plugins.db

  tests:
    name: Test
    runs-on: ubuntu-24.04
    continue-on-error: false
    needs: [get-hub-data]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
    - uses: astral-sh/setup-uv@a02a550bdd3185dba2ebb6aa98d77047ce54ad21 # v6.2.1
      with:
        version: ${{ env.UV_VERSION }}
    - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: hub-data
    - run: uv run coverage run -m pytest -v
      continue-on-error: true # Continue on error to combine coverage.
      env:
        ONLY_GROUP: tests
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        include-hidden-files: true
        name: coverage
        path: .coverage.*

  typing:
    name: Type Checking
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
    - uses: astral-sh/setup-uv@a02a550bdd3185dba2ebb6aa98d77047ce54ad21 # v6.2.1
      with:
        version: ${{ env.UV_VERSION }}
    - run: uv run mypy src tests
      env:
        ONLY_GROUP: typing

  schemathesis:
    name: Schemathesis Test
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Start containers
      run: docker compose up -d --build
    - uses: schemathesis/action@bae1db239f4af803b9bc43b11aa4e196a7b87289 # v1.1.0
      with:
        schema: 'http://127.0.0.1:8080/openapi.json'
        base-url: http://127.0.0.1:8080
        api-name: meltano-hub-api
        report: 'false'
        args: '--experimental=openapi-3.1 --junit-xml=junit.xml'
        version: ${{ env.SCHEMATHESIS_VERSION }}
    - uses: mikepenz/action-junit-report@a83fd2b5d58d4fc702e690c1ea688d702d28d281 # v5.6.1
      if: success() || failure() # always run even if the previous step fails
      with:
        comment: true
        detailed_summary: true
        include_passed: true
        report_paths: junit.xml
    - name: Stop containers
      if: always()
      run: docker compose down

  owasp:
    name: OWASP OFFAT
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Start containers
      run: docker compose up -d --build
    - uses: astral-sh/setup-uv@a02a550bdd3185dba2ebb6aa98d77047ce54ad21 # v6.2.1
      with:
        version: ${{ env.UV_VERSION }}
    - run: >
        uvx --with offat==${{ env.OFFAT_VERSION }}
        offat
        --server http://127.0.0.1:8080
        --file http://127.0.0.1:8080/openapi.json
        --rate-limit 120
        --capture-failed
        --headers 'User-Agent: offat/${{ env.OFFAT_VERSION }}'
        --format json
        --output ./offat-tmp/results.json
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: offat-results.json
        path: ./offat-tmp/results.json
        # retention period docs: https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#artifact-and-log-retention-policy
        retention-days: 2

    - name: Stop containers
      if: always()
      run: docker compose down

  coverage:
    name: Coverage
    runs-on: ubuntu-24.04
    continue-on-error: false
    needs: [tests]
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: coverage
    - uses: astral-sh/setup-uv@a02a550bdd3185dba2ebb6aa98d77047ce54ad21 # v6.2.1
      with:
        version: ${{ env.UV_VERSION }}
    - name: Combine coverage
      env:
        ONLY_GROUP: tests
      run: |
        uv run coverage combine
        uv run coverage html --skip-covered --skip-empty

        # Report and write to summary.
        uv run coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

        # Report again and fail if under 100%.
        uv run coverage report --fail-under=100 --show-missing
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: failure()
      with:
        name: html-report
        path: htmlcov
